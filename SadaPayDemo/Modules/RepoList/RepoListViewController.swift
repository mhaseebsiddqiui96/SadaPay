//
//  RepoListViewController.swift
//  SadaPayDemo
//
//  Created by Muhammad Haseeb Siddiqui on 6/20/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the 🐍 VIPER generator
//

import UIKit

final class RepoListViewController: UIViewController {

    // MARK: - UI Elements
    
    @IBOutlet weak var RepoListTableView: UITableView!
    var listOfReposViewModel: [RepoListItemViewModel] = []
    
    
    // MARK: - Public properties -

    var presenter: RepoListPresenterInterfaceInput!

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        self.title = "Trending"
        setupRepoListTableView()
        presenter.viewLoaded()
    }
    
    // MARK: - TableView Setup
    private func setupRepoListTableView() {
        RepoListTableView.registerTableCell([RepositoryItemCell.self])
        RepoListTableView.delegate = self
        RepoListTableView.dataSource = self
    }

}

// MARK: - Extensions -

extension RepoListViewController: RepoListViewInterface {
    
    func displayListOfRepos(_ viewModel: [RepoListItemViewModel]) {
        self.listOfReposViewModel = viewModel
        self.RepoListTableView.reloadData()
    }
}


// MARK: - Tableview DataSource and Delegate

extension RepoListViewController: UITableViewDelegate, UITableViewDataSource {
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return listOfReposViewModel.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        guard let cell = tableView.dequeueReusableCell(withIdentifier: "\(RepositoryItemCell.self)", for: indexPath) as? RepositoryItemCell else {return UITableViewCell()}
        
        guard indexPath.row < listOfReposViewModel.count else { return UITableViewCell() }
        
        let model = listOfReposViewModel[indexPath.row]
        
        cell.setup(model)
        
        return cell
    }
}
